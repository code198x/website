---
// Component for rendering Next/Previous navigation links
interface NavLink {
  slug: string;
  title: string;
}

interface Props {
  contentType: 'blog' | 'concepts' | 'platforms' | 'tutorials';
  prev: NavLink | null;
  next: NavLink | null;
  // Optional custom text (defaults can be added)
  prevText?: string;
  nextText?: string;
}

const { 
  contentType, 
  prev, 
  next, 
  prevText = '&larr; Previous', // Default text
  nextText = 'Next &rarr;' // Default text
} = Astro.props;

const showNav = prev || next;
---
{showNav && (
  <nav class="post-navigation">
    {prev ? (
      <a href={`/${contentType}/${prev.slug}`} class="prev">
        <Fragment set:html={prevText} />
        <span>{prev.title}</span>
      </a>
    ) : <div /> /* Empty div for flexbox spacing */} 
    {next ? (
      <a href={`/${contentType}/${next.slug}`} class="next">
        <Fragment set:html={nextText} />
        <span>{next.title}</span>
      </a>
    ) : <div /> /* Empty div for flexbox spacing */} 
  </nav>
)}

<style>
  .post-navigation {
    display: flex;
    justify-content: space-between;
    align-items: flex-start; /* Align items top */
    gap: 1rem; /* Add gap for spacing */
    margin-top: 3rem;
    padding-top: 1rem;
    border-top: 1px solid #444;
  }
  .post-navigation a {
    display: flex;
    flex-direction: column;
    flex-basis: 48%; /* Use flex-basis for better control */
    max-width: 48%;
    text-decoration: none;
    line-height: 1.3;
  }
  .post-navigation a span {
    font-size: 0.9em;
    color: #ccc;
    margin-top: 0.25em;
  }
  .post-navigation a:hover span {
     text-decoration: underline;
  }
  .post-navigation .next {
    text-align: right;
    /* margin-left: auto; no longer needed with justify-content: space-between and flex-basis */
  }
  /* Empty div takes up space if one link is missing */
  .post-navigation div {
    flex-basis: 48%;
  }
</style> 
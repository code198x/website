---
// import Layout from '../../layouts/Layout.astro'; // No longer needed directly
import ListPageLayout from '../../layouts/ListPageLayout.astro'; // Use the new layout
import Pagination from '../../components/Pagination.astro'; // Import the pagination component
import { getCollection } from 'astro:content';

// Astro expects a `getStaticPaths` function for paginated routes
export async function getStaticPaths({ paginate }) {
  const tutorials = await getCollection('tutorials');
  // Sort tutorials by publish date descending
  tutorials.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

  return paginate(tutorials, { pageSize: 10 });
}

// The page prop comes from getStaticPaths
const { page } = Astro.props;

const pageTitle = "Tutorials - Code 198x";
const pageDescription = "Learn programming techniques for various platforms.";
---
<ListPageLayout 
  title={pageTitle}
  description={pageDescription}
  items={page.data} // Pass the paginated data
>
  {/* Define the content for each list item using the named slot */}
  <Fragment slot="list-item" let:item={tutorial}>
    <a href={`/tutorials/${tutorial.slug}`} class="item-title">{tutorial.data.title}</a>
    {tutorial.data.description && <p class="item-description">{tutorial.data.description}</p>}
    <p class="item-meta">Platform(s): {tutorial.data.platform.join(', ')}</p>
    <p class="item-meta">Tags: {tutorial.data.tags.join(', ')}</p>
    <time datetime={tutorial.data.publishDate.toISOString()} class="item-meta">
      Published: {tutorial.data.publishDate.toLocaleDateString('en-us', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
      })}
    </time>
  </Fragment>

  {/* Add Pagination component below the list */}
  <Pagination page={page} />
</ListPageLayout>

<style>
  /* Add specific styles for the tutorial list items */
  /* Re-use styles from blog index or define new ones */
  .item-title {
    font-size: 1.2em;
    font-weight: bold;
    text-decoration: none;
    display: block;
    margin-bottom: 0.25em;
  }
  .item-title:hover {
    text-decoration: underline;
  }
  .item-description {
    margin-bottom: 0.5em;
    color: var(--color-text-muted);
  }
  .item-meta {
    font-size: 0.85em;
    color: var(--color-text-muted);
    margin-bottom: 0.25em;
    margin-top: 0;
  }
</style> 
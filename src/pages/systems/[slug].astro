---
import { getEntryBySlug, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
const { slug } = Astro.params;
const system = await getEntryBySlug('systems', slug) as any;
if (!system) throw new Error('System not found');

const lessons = (await getCollection('lessons') as any[]).filter(l => l.data.system === slug);
const lessonsByPhase = lessons.reduce((acc: Record<string, any[]>, lesson: any) => {
  const phase = String(lesson.data.phase);
  if (!acc[phase]) acc[phase] = [];
  acc[phase].push(lesson);
  return acc;
}, {});
Object.values(lessonsByPhase).forEach((phaseLessons: any) => phaseLessons.sort((a: any, b: any) => a.data.order - b.data.order));

export async function getStaticPaths() {
  const systems = await getCollection('systems') as any[];
  return systems.map(system => ({ params: { slug: system.slug } }));
}
---

<Layout>
  <h1>{system.data.title}</h1>
  <p><strong>Manufacturer:</strong> {system.data.manufacturer}</p>
  <p><strong>Release Date:</strong> {system.data.release_date}</p>
  <p><strong>Discontinued:</strong> {system.data.discontinued}</p>
  <p>{system.data.summary}</p>
  {system.data.variants && (
    <>
      <h2>Variants</h2>
      <ul>
        {system.data.variants.map((variant: any) => (
          <li>
            <strong>{variant.name}</strong> ({variant.release_date} – {variant.discontinued})<br />
            Regions: {variant.regions.join(', ')}<br />
            {variant.notes && <em>{variant.notes}</em>}
          </li>
        ))}
      </ul>
    </>
  )}
  <article set:html={system.body} />

  <section>
    <h2>System Timeline</h2>
    <p>*A timeline of key events for this system will appear here in the future.*</p>
  </section>

  <section>
    <h2>Curriculum</h2>
    {Object.keys(lessonsByPhase).length === 0 ? (
      <p>No lessons available yet for this system.</p>
    ) : (
      Object.entries(lessonsByPhase).map(([phase, phaseLessons]: [string, any[]]) => (
        <div>
          <h3>Phase {phase}</h3>
          <ul>
            {phaseLessons.map((lesson: any) => (
              <li>
                <a href={`/lessons/${lesson.data.system}/${lesson.data.phase}/${lesson.slug}`}>{lesson.data.title}</a>
                {lesson.data.summary && <> — {lesson.data.summary}</>}
              </li>
            ))}
          </ul>
        </div>
      ))
    )}
  </section>
</Layout> 
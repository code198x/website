import { getCollection, type CollectionEntry } from 'astro:content';
import PlatformLayout from '../../layouts/PlatformLayout.astro'; // Using a specific layout

// Needed for SSG to generate all platform pages
export async function getStaticPaths() {
  const platforms = await getCollection('platforms');
  // Sort platforms for next/prev logic (e.g., by order field, then title)
  platforms.sort((a, b) => (a.data.order ?? Infinity) - (b.data.order ?? Infinity) || a.data.title.localeCompare(b.data.title));
  
  return platforms.map((entry, index) => {
    // Calculate prev/next based on the sorted list
    const prev = index > 0 ? { slug: platforms[index - 1].slug, title: platforms[index - 1].data.title } : null;
    const next = index < platforms.length - 1 ? { slug: platforms[index + 1].slug, title: platforms[index + 1].data.title } : null;
    
    return {
      params: { slug: entry.slug }, 
      props: { entry, prev, next }, // Pass prev/next data
    };
  });
}

interface Props {
  entry: CollectionEntry<'platforms'>;
  prev: { slug: string; title: string } | null;
  next: { slug: string; title: string } | null;
}

const { entry, prev, next } = Astro.props;
const { Content } = await entry.render();

<PlatformLayout entry={entry} prev={prev} next={next}>
	<Content />
</PlatformLayout> 
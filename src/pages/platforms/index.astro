---
// import Layout from '../../layouts/Layout.astro'; // No longer needed directly
import ListPageLayout from '../../layouts/ListPageLayout.astro'; // Use the new layout
import Pagination from '../../components/Pagination.astro'; // Import the pagination component
import { getCollection } from 'astro:content';

// Astro expects a `getStaticPaths` function for paginated routes
export async function getStaticPaths({ paginate }) {
  const platforms = await getCollection('platforms', ({ data }) => {
    // Filter out draft posts if needed in the future
    // return import.meta.env.PROD ? data.draft !== true : true;
    return true;
  });
  // Sort platforms, e.g., by order field then title
  platforms.sort((a, b) => (a.data.order ?? 999) - (b.data.order ?? 999) || a.data.title.localeCompare(b.data.title));

  return paginate(platforms, { pageSize: 10 });
}

// The page prop comes from getStaticPaths
const { page } = Astro.props;

const pageTitle = "Platforms - Code 198x";
const pageDescription = "An overview of the systems covered on this site.";
---
<ListPageLayout
  title={pageTitle}
  description={pageDescription}
  items={page.data} // Pass the paginated data
>
  {/* Define the content for each list item using the named slot */}
  <Fragment slot="list-item" let:item={platform}>
    <a href={`/platforms/${platform.slug}`} class="item-title">{platform.data.title}</a>
    <span class="item-meta"> ({platform.data.type})</span>
    {/* Add manufacturer/year if desired */}
    {/* {platform.data.manufacturer && <p class="item-meta">{platform.data.manufacturer}</p>} */}
  </Fragment>

  {/* Add Pagination component below the list */}
  <Pagination page={page} />
</ListPageLayout>

<style>
  /* Add specific styles for the platform list items */
  .item-title {
    font-size: 1.2em; /* Consistent with other lists */
    text-decoration: none;
    display: inline; /* Allow type to appear on same line */
  }
  .item-title:hover {
    text-decoration: underline;
  }
  .item-meta {
    font-size: 0.9em;
    color: var(--color-text-muted);
  }
  /* Remove specific styling for li if handled globally */
</style> 
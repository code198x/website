import { getCollection, type CollectionEntry } from 'astro:content';
// import Layout from '../../layouts/Layout.astro'; // Using the default layout
import ConceptLayout from '../../layouts/ConceptLayout.astro'; // Use specific layout

// Generate pages for all concepts
export async function getStaticPaths() {
  const concepts = await getCollection('concepts');
  // Sort concepts by title for next/prev logic
  concepts.sort((a, b) => a.data.title.localeCompare(b.data.title));
  return concepts.map((entry, index) => {
    const prev = index > 0 ? { slug: concepts[index - 1].slug, title: concepts[index - 1].data.title } : null;
    const next = index < concepts.length - 1 ? { slug: concepts[index + 1].slug, title: concepts[index + 1].data.title } : null;
    return {
      params: { slug: entry.slug }, 
      props: { 
        entry, 
        // contentType is now handled within ConceptLayout
        prev, 
        next 
      },
    };
  });
}

interface Props {
  entry: CollectionEntry<'concepts'>;
  // contentType: string; // No longer needed here
  prev: { slug: string; title: string } | null;
  next: { slug: string; title: string } | null;
}

const { entry, prev, next } = Astro.props; // Removed contentType
const { Content } = await entry.render();

<ConceptLayout 
  entry={entry} 
  prev={prev}
  next={next}
>
	{/* Title rendering is now handled within ConceptLayout */}
	<Content />
</ConceptLayout> 
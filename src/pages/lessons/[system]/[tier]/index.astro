---
// src/pages/lessons/[system]/[tier]/index.astro
import { getCollection, render } from 'astro:content';
import Layout from '../../../../layouts/Layout.astro';

const { params } = Astro;
const systemSlug = params.system;
const tierSlug = params.tier;

// Fetch the specific system's data
const systems = await getCollection('systems');
const systemData = systems.find(s => s.slug === systemSlug);

// Fetch the specific tier's data
const tiers = await getCollection('tiers');
const tierData = tiers.find(t => t.data.system === systemSlug && t.data.tier === tierSlug);

const tierLessons = (await getCollection('lessons'))
  .filter(l => l.data.system === systemSlug && l.data.tier === tierSlug)
  .sort((a, b) => a.data.lesson_number - b.data.lesson_number);

const { Content } = await render(tierData);

export async function getStaticPaths() {
  const tiers = await getCollection('tiers');

  return tiers.map((tier) => {
    const { system, tier: tierId } = tier.data;

    return {
      params: {
        system,
        tier: tierId,
      },
      props: {
        tier,
      },
    };
  });
}

// Define the breadcrumb items
const breadcrumbItems = [
  { label: 'Home', href: '/' },
  { label: 'Lessons', href: '/lessons' },
  { label: systemData?.data.name || 'Unknown System', href: `/lessons/${systemSlug}` },
  { label: tierData?.data.title || 'Unknown Tier', href: `/lessons/${systemSlug}/${tierSlug}` },
];
---

<Layout title={`${systemData?.data.name || 'Unknown System'} - ${tierData?.data.title || 'Unknown Tier'}`} breadcrumbItems={breadcrumbItems}>

{tierData?.data.image && <img src={tierData.data.image} alt={tierData.data.title} />}
<Content />

<h2>Lessons in this Tier</h2>
<ul>
  {tierLessons.map(l => (
    <li><a href={`/lessons/${systemSlug}/${tierSlug}/${l.slug.split('/').pop()}`}>{l.data.title}</a></li>
  ))}
</ul>
</Layout>

---
import Layout from "../../../layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";

const { params } = Astro;
const { system, tier } = params;
const tierNumber = Number((tier as string).replace('tier-', ''));

const systemEntry = await getEntry("systems", system);
const systemName = systemEntry?.data.name ?? system;

const allLessons = await getCollection("lessons");

// Filter lessons for this system and tier
const lessons = allLessons
  .filter(
    (lesson: any) =>
      lesson.data.system === system && lesson.data.tier === tierNumber
  )
  .sort((a: any, b: any) => a.data.order - b.data.order);

export async function getStaticPaths() {
  const { getCollection } = await import("astro:content");
  const lessons = await getCollection("lessons");

  const combinations = new Set(
    lessons.map((lesson: any) => `${lesson.data.system}|tier-${lesson.data.tier}`)
  );

  return Array.from(combinations).map((combo) => {
    const [system, tier] = combo.split("|");
    return { params: { system, tier } };
  });
}
---

<Layout title={`Tier ${tierNumber} Lessons for ${systemName}`}>
  <ul>
    {(lessons as any[]).map((lesson) => (
      <li>
        <a href={`/lessons/${system}/tier-${tierNumber}/${lesson.slug}`}>{lesson.data.title}</a>
      </li>
    ))}
  </ul>
</Layout>